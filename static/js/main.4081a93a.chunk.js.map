{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timeId","runTime","setState","console","info","toUTCString","slice","this","window","setInterval","clearInterval","name","props","className","Component","App","hasClock","clockName","timerId","runName","getRandomName","value","now","toString","handleRightContext","event","preventDefault","handleLeftClick","document","addEventListener","_","prevState","debug","removeEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,OAAS,EALX,EAeEC,QAAU,WACR,IAAMH,EAAQ,IAAIC,KAElB,EAAKG,SAAS,CAAEJ,UAGhBK,QAAQC,KAAK,EAAKP,MAAMC,MAAMO,cAAcC,OAAO,IAAK,KArB5D,uDAOE,WACEC,KAAKP,OAASQ,OAAOC,YAAYF,KAAKN,QAAS,OARnD,kCAWE,WACEO,OAAOE,cAAcH,KAAKP,UAZ9B,oBAwBE,WACE,IAAQF,EAAUS,KAAKV,MAAfC,MACAa,EAASJ,KAAKK,MAAdD,KAER,OACE,sBAAKE,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGf,EAAMO,cAAcC,OAAO,IAAK,YArC3C,GAA2BQ,aCDdC,EAAb,4MACElB,MAAQ,CACNmB,UAAU,EACVC,UAAW,WAHf,EAMEC,QAAU,EANZ,EA+BEC,QAAU,WACR,IAAMF,EAAY,EAAKG,gBAEvB,EAAKlB,SAAS,CAAEe,eAlCpB,EAqCEG,cAAgB,WACd,IAAMC,EAAQtB,KAAKuB,MAAMC,WAAWjB,OAAO,GAE3C,MAAM,SAAN,OAAgBe,IAxCpB,EA2CEG,mBAAqB,SAACC,GACpBA,EAAMC,iBACN,EAAKxB,SAAS,CAAEc,UAAU,KA7C9B,EAgDEW,gBAAkB,WAChB,EAAKzB,SAAS,CAAEc,UAAU,KAjD9B,uDAQE,WACET,KAAKW,QAAUV,OAAOC,YAAYF,KAAKY,QAAS,MAEhDS,SAASC,iBAAiB,cAAetB,KAAKiB,oBAE9CI,SAASC,iBAAiB,QAAStB,KAAKoB,mBAb5C,gCAgBE,SAAmBG,EAAOC,GACxB,MAAgCxB,KAAKV,MAA7BmB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAEdD,GAAYC,IAAcc,EAAUd,WAEtCd,QAAQ6B,MAAR,uBAA8BD,EAAUd,UAAxC,eAAwDA,MArB9D,kCAyBE,WACEW,SAASK,oBAAoB,cAAe1B,KAAKiB,oBACjDI,SAASK,oBAAoB,QAAS1B,KAAKoB,iBAC3CnB,OAAOE,cAAcH,KAAKW,WA5B9B,oBAoDE,WACE,MAAgCX,KAAKV,MAA7BmB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKJ,UAAU,MAAf,UACE,6CAECG,GACC,cAAC,EAAD,CAAOL,KAAMM,WA5DvB,GAAyBH,aCNzBoB,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.4081a93a.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  today: Date;\n};\n\ntype Props = {\n  name: string;\n};\n\nexport class Clock extends Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timeId = 0;\n\n  componentDidMount() {\n    this.timeId = window.setInterval(this.runTime, 1000);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timeId);\n  }\n\n  runTime = () => {\n    const today = new Date();\n\n    this.setState({ today });\n\n    // eslint-disable-next-line no-console\n    console.info(this.state.today.toUTCString().slice(-12, -4));\n  };\n\n  render() {\n    const { today } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\ninterface State {\n  hasClock: boolean;\n  clockName: string,\n}\n\nexport class App extends Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(this.runName, 3300);\n\n    document.addEventListener('contextmenu', this.handleRightContext);\n\n    document.addEventListener('click', this.handleLeftClick);\n  }\n\n  componentDidUpdate(_: {}, prevState: State) {\n    const { hasClock, clockName } = this.state;\n\n    if (hasClock && clockName !== prevState.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.handleRightContext);\n    document.removeEventListener('click', this.handleLeftClick);\n    window.clearInterval(this.timerId);\n  }\n\n  runName = () => {\n    const clockName = this.getRandomName();\n\n    this.setState({ clockName });\n  };\n\n  getRandomName = () => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  handleRightContext = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({ hasClock: false });\n  };\n\n  handleLeftClick = () => {\n    this.setState({ hasClock: true });\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock name={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}